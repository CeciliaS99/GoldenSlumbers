#include <iostream>
#include <string>

using namespace std;
class Array
{
public:
	Array(int countn);
	Array(const Array &arr);
  ~Array();
  void setCount(int countn);
  int getCount();
  void printArr();
private:
	int m_iCount;
	int *m_pArr;
};

Array::Array(int countn)
{
    m_iCount = countn;
    m_pArr = new int[m_iCount];
    cout << "Array(int countn)" << endl;
}
Array::Array(const Array &arr)
{
    m_iCount = arr.m_iCount;
    m_pArr = new int[m_iCount];      
    for(int i=0; i< m_iCount; i++)   
    {                                
        m_pArr[i] = arr.m_pArr[i];   
    }                               
    cout << "Array(const Array &arr)" << endl;
}
Array::~Array()
{
    delete []m_pArr;
    m_pArr = nullptr;
    cout << "~Array()" << endl;
}

void Array::setCount(int countn)
{
    m_iCount = countn;
}
int Array::getCount()
{
    return m_iCount;
}
void Array::printArr()
{
    cout << m_pArr << endl;
}


int main(void)
{
	Array arr1(5);
	Array arr2(arr1);
  arr1.printArr();  // 打印地址不同，arr1和arr2指向不同内存
  arr2.printArr();
	return 0;
}
